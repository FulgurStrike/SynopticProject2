<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.tailwindcss.com"></script>
  <title><%= title %></title>
</head>
<body class="bg-[#e4f4fd] min-h-screen flex justify-center items-start py-10 px-4">

  <div class="bg-white w-full max-w-md p-6 rounded-xl shadow-md border border-[#d1ecf9] space-y-5">

    <button class="bg-[#00aaff] hover:bg-[#0095dd] text-white font-semibold py-2 px-4 rounded-lg text-sm transition duration-200">
      <a href="/">Back to Homepage</a>
    </button>

    <!-- Search Bar -->
    <div class="flex items-center bg-[#f0faff] border border-[#d1ecf9] rounded-lg px-3 py-2 shadow-sm">
      <input id="search-input" class="outline-none bg-transparent w-full text-sm text-gray-700 placeholder-gray-400" placeholder="Search..." />
      <img src="/cat-call.gif" alt="Profile" class="w-8 h-8 rounded-full ml-2 border border-[#d1ecf9]" />
    </div>

    <!-- Shop Info -->
    <div class="bg-[#f0faff] p-4 rounded-xl shadow-inner border border-[#d1ecf9] space-y-3">
      <div class="flex items-start">
        <img src="/cat-call.gif" alt="Profile" class="w-16 h-16 mr-3 rounded-xl shadow-md border border-[#d1ecf9]" />
        <div>
          <h2 class="font-semibold text-[#1f2937] text-lg">The Milky Millard</h2>
          <p class="text-sm text-gray-600">Hugh Street, inne Avenue, Location, ZZZZ ZZZ</p>
        </div>
      </div>

      <p class="text-xs text-gray-500">
        Last Updated: <span id="last-updated" class="font-medium text-[#00aaff]">Loading...</span>
      </p>

      <!-- Inventory Display -->
      <div class="border border-[#d1ecf9] p-3 rounded-lg bg-white max-h-60 overflow-y-auto" id="database-display">
        <p class="text-center text-gray-400">Loading data...</p>
      </div>
    </div>

  </div>

  <script>
    let allItems = [];
    let data = {};

    async function fetchData() {
      const urlParams = new URLSearchParams(window.location.search);
      const key = urlParams.get('key');
      const res = await fetch(`/api/shopData${key ? '?key=' + key : ''}`);
      data = await res.json();

      document.getElementById('last-updated').innerText = data.lastUpdated;
      allItems = data.items;
      renderItems();
    }

    function renderItems() {
      const dbDisplay = document.getElementById('database-display');
      const searchValue = document.getElementById('search-input').value.trim().toLowerCase();
      dbDisplay.innerHTML = '';

      const filteredItems = allItems.filter(item =>
        item.name.toLowerCase().includes(searchValue)
      );

      if (filteredItems.length === 0) {
        dbDisplay.innerHTML = '<p class="text-center text-gray-400">No items found.</p>';
      } else {
        filteredItems.forEach((item) => {
          const div = document.createElement('div');
          div.className = 'flex justify-between items-center border-b py-2 text-sm text-gray-800';
          div.innerHTML =
            `<span>${item.name} <span class="text-xs text-gray-400">(Qty: ${
              data.admin
                ? `<input type="number" min="0" value="${item.quantity}" style="width:50px" 
                    onchange="updateQuantity('${item._id}', this.value)" />`
                : item.quantity
            })</span></span>` +
            (data.admin ? `<button onclick="removeItem('${item._id}')" class="text-red-500 text-xs hover:underline ml-2">Remove</button>` : '');
          dbDisplay.appendChild(div);
        });
      }

      if (data.admin && searchValue === '') {
        const input = document.createElement('input');
        input.placeholder = 'Add item';
        input.className = 'mt-3 p-2 border border-[#d1ecf9] rounded w-full text-sm';
        input.onkeydown = async (e) => {
          if (e.key === 'Enter' && input.value.trim()) {
            await fetch('/api/addItem?key=' + (new URLSearchParams(window.location.search).get('key') || ''), {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ item: input.value.trim() })
            });
            input.value = '';
            fetchData();
          }
        };
        dbDisplay.appendChild(input);
      }
    }

    document.getElementById('search-input').addEventListener('input', renderItems);

    async function removeItem(id) {
      const key = new URLSearchParams(window.location.search).get('key');
      await fetch('/api/removeItem?key=' + key, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id })
      });
      fetchData();
    }

    async function updateQuantity(id, quantity) {
      quantity = Number(quantity);
      if (isNaN(quantity) || quantity < 0) return;
      const key = new URLSearchParams(window.location.search).get('key');
      await fetch('/api/updateQuantity?key=' + key, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id, quantity })
      });
      fetchData();
    }

    fetchData();
  </script>
</body>
</html>
